{"version":3,"sources":["logo.svg","bpmtools.app/bpmtools.components/bpmtools.subcomponents/Toggle.js","bpmtools.app/bpmtools.components/Module.js","bpmtools.app/bpmtools.components/bpmtools.subcomponents/dynamic-drop-down.js","bpmtools.app/bpmtools.files/modes.js","bpmtools.app/bpmtools.components/bpmtools.subcomponents/mode-select.js","bpmtools.app/bpmtools.files/notes.js","bpmtools.app/bpmtools.components/bpmtools.subcomponents/note-select.js","bpmtools.app/bpmtools.files/combinedpiano.js","bpmtools.app/bpmtools.functions/fGetScale.js","bpmtools.app/bpmtools.components/Scale.js","bpmtools.app/bpmtools.files/delaynotation.js","bpmtools.app/bpmtools.functions/fGetDuplets.js","bpmtools.app/bpmtools.functions/fGetTriplets.js","bpmtools.app/bpmtools.functions/fGetDotted.js","bpmtools.app/bpmtools.components/bpmtools.subcomponents/Cleantimetable.js","bpmtools.app/bpmtools.components/Time.js","bpmtools.app/bpmtools.components/Nav.js","bpmtools.app/bpmtools.functions/fGetLFO.js","bpmtools.app/bpmtools.components/Lfo.js","bpmtools.app/bpmtools.files/frequency.js","bpmtools.app/bpmtools.components/bpmtools.subcomponents/Subtable.js","bpmtools.app/bpmtools.functions/fCycleTime.js","bpmtools.app/bpmtools.components/Sub.js","bpmtools.app/bpmtools.components/Frequencies.js","bpmtools.app/bpmtools.components/DevNotes.js","bpmtools.app/BpmTools.js","App.js","reportWebVitals.js","index.js"],"names":["Toggle","props","stateinit","on","toggleid","id","useState","display","setDisplay","Grid","container","spacing","item","xs","htmlFor","mb","label","size","defaultChecked","onChange","event","preventDefault","newToggle","index","stateID","comp","tf","changeToggle","toggleOff","toggleOn","Module","toggleID","onToggleChange","component","initcomponent","Card","variant","DynamicDropdown","isFullWidth","selectprops","map","sel","value","name","MODES","steps","notation","ModeSelect","newMode","text","target","onModeChange","NOTES","NoteSelect","newNote","onNoteChange","COMBINEDPIANO","getScale","currentroot","selectedscale","newscale","newsteps","shift","push","step","parseInt","newnotes","forEach","filter","obj","newNames","initialState","mode","root","scale","chords","Scale","userState","setUserState","className","selectedMode","prevUserState","currentNote","Table","TableBody","TableRow","TableCell","style","padding","align","note","chord","href","isExternal","DELAYNOTATION","getDuplets","bpm","duplettable","bpmMs","toFixed","getTriplets","triplettable","getDotted","dottedtable","CleanTimeTable","a","b","c","d","Time","TableHead","BPM","useStyles","makeStyles","flexGrow","color","backgroundColor","menuButton","title","ButtonAppBar","classes","React","anchorEl","setAnchorEl","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","Typography","TextField","newBpm","onBpmInput","InputProps","endAdornment","InputAdornment","type","margin","defaultValue","width","getLFO","userBpm","baseLFO","lfoTable","LFO","lfotable","printLFO","FREQUENCY","Subtable","freq","hertz","Sub","allFrequencies","EQTABLE","octave","oct","Frequencies","DevNotes","BpmTools","Bpm","setUserBpm","allModules","currentState","element","checkToggle","toggleStatus","labelstring","module","Container","maxWidth","direction","currentBPM","console","log","Lfo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbf619f7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\r\nimport {\r\n    Switch,\r\n    FormControl,\r\n    FormLabel\r\n} from \"@chakra-ui/react\"\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst Toggle = (props) => {\r\n    let stateinit = {on: true, toggleid: props.id}\r\n    const [display, setDisplay] = useState(stateinit);\r\n\r\n    const Toggled = event => {\r\n        event.preventDefault();\r\n\r\n        //define On / Off\r\n        const toggleOn = () => {\r\n            let newToggle = {index: props.stateID, comp: true, tf: 'ON'}\r\n            props.changeToggle(newToggle)\r\n            //console.log('comp: '+newToggle.comp+' -- id: '+newToggle.index)\r\n        }\r\n        const toggleOff = () => {\r\n            let newToggle = {index: props.stateID, comp: false, tf: 'OFF'}\r\n            props.changeToggle(newToggle)\r\n            //console.log('comp: '+newToggle.comp+' -- id: '+newToggle.index)\r\n        }\r\n\r\n        if (display.on === true) {\r\n            setDisplay(() => {\r\n                return {\r\n                    on: false,\r\n            }});\r\n            //hide\r\n            toggleOff()\r\n        } else {\r\n            setDisplay(() => {\r\n                return {\r\n                    on: true,\r\n            }});\r\n            //show\r\n            toggleOn()\r\n        }\r\n        //testing\r\n\r\n    }\r\n    return (\r\n        <FormControl>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={10}>\r\n                <FormLabel htmlFor=\"email-alerts\" mb=\"0\">\r\n                    {props.label}\r\n                </FormLabel>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                <Switch size=\"lg\" defaultChecked=\"true\" id={props.id} onChange={Toggled}/>\r\n                </Grid>\r\n            </Grid>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default Toggle;","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Toggle from './bpmtools.subcomponents/Toggle';\r\n\r\nconst Module = props => {\r\n    return (\r\n        <div>\r\n            <Toggle \r\n            label={props.label} \r\n            id={props.toggleID} \r\n            changeToggle={props.onToggleChange} \r\n            component={props.initcomponent}\r\n            stateID={props.stateID}\r\n            />\r\n            <Card variant=\"outlined\">\r\n                {props.component}\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Module;","import React from 'react';\nimport { Select,} from \"@chakra-ui/react\"\n\nconst DynamicDropdown = (props) => {\n    return (\n            <Select isFullWidth=\"false\" size=\"sm\" variant=\"filled\" onChange={props.onChange}>\n            {props.selectprops.map((sel) => {\n                return <option key={sel.name} value={sel.name}>{sel.label}</option>\n                })}\n            </Select>\n    )\n}\n\nexport default DynamicDropdown;","const MODES = [\n    {\n        name: 'aeolian',\n        label: 'Aeolian mode (minor)',\n        steps: [1, 3, 4, 6, 8, 9, 11],\n        notation: ['i', 'dim', 'III', 'iv', 'v', 'VI', 'VII']\n    },\n    {\n        name: 'locrian',\n        label: 'Locrian mode',\n        steps: [1, 2, 4, 6, 7, 9, 11],\n        notation: ['dim', 'II', 'iii', 'iv', 'V', 'VI', 'vii']\n    },\n    {\n        name: 'ionian',\n        label: 'Ionian mode (major)',\n        steps: [1, 3, 5, 6, 8, 10, 12],\n        notation: ['I', 'ii', 'iii', 'IV', 'V', 'vi', 'dim']\n    },\n    {\n        name: 'dorian',\n        label: 'Dorian',\n        steps: [1, 3, 4, 6, 8, 10, 11],\n        notation: ['i', 'ii', 'III', 'IV', 'v', 'dim', 'VII']\n    },\n    {\n        name: 'phrygian',\n        label: 'Phrygian',\n        steps: [1, 2, 4, 6, 8, 9, 11],\n        notation: ['i', 'II', 'III', 'iv', 'dim', 'VI', 'vii']\n    },\n    {\n        name: 'lydian',\n        label: 'Lydian',\n        steps: [1, 3, 5, 7, 8, 10, 12],\n        notation: ['I', 'II', 'iii', 'dim', 'V', 'vi', 'vii']\n    },\n    {\n        name: 'mixolydian',\n        label: 'Mixolydian',\n        steps: [1, 3, 5, 6, 8, 10, 11],\n        notation: ['I', 'ii', 'dim', 'IV', 'v', 'vi', 'vii']\n    }\n]\n  export default MODES;","import React from 'react';\r\nimport DynamicDropdown from './dynamic-drop-down';\r\nimport MODES from '../../bpmtools.files/modes';\r\n\r\nconst ModeSelect = props => {\r\n    const changeMode = event => {\r\n        event.preventDefault();\r\n\r\n        const newMode = {\r\n            text: 'Mode has changed!',\r\n            value: event.target.value\r\n        };\r\n\r\n        props.onModeChange(newMode);\r\n    }\r\n    return (\r\n                <DynamicDropdown id=\"modeSelector\" selectprops={MODES} onChange={changeMode}/>\r\n    );\r\n};\r\n\r\nexport default ModeSelect;","const NOTES = [\n    {\n        name: '0',\n        label: 'C',\n        value: 0\n    },\n    {\n        name: '1',\n        label: 'C# / Db',\n        value: 1\n    },\n    {\n        name: '2',\n        label: 'D',\n        value: 2\n    },\n    {\n        name: '3',\n        label: 'D# / Eb',\n        value: 3\n    },\n    {\n        name: '4',\n        label: 'E',\n        value: 4\n    },\n    {\n        name: '5',\n        label: 'F',\n        value: 5\n    },\n    {\n        name: '6',\n        label: 'F# / Gb',\n        value: 6\n    },\n    {\n        name: '7',\n        label: 'G',\n        value: 7\n    },\n    {\n        name: '8',\n        label: 'G# / Ab',\n        value: 8\n    },\n    {\n        name: '9',\n        label: 'A',\n        value: 9\n    },\n    {\n        name: '10',\n        label: 'A# / Bb',\n        value: 10\n    },\n    {\n        name: '11',\n        label: 'B',\n        value: 11\n    }\n]\nexport default NOTES;","import React from 'react';\r\nimport DynamicDropdown from './dynamic-drop-down';\r\nimport NOTES from '../../bpmtools.files/notes';\r\n\r\nconst NoteSelect = props => {\r\n    const changeNote = event => {\r\n        event.preventDefault();\r\n\r\n        const newNote = {\r\n            text: 'Note has changed!',\r\n            value: event.target.value\r\n        };\r\n\r\n        props.onNoteChange(newNote);\r\n    }\r\n    return (\r\n                <DynamicDropdown id=\"noteSelector\" selectprops={NOTES} onChange={changeNote}/>\r\n    );\r\n};\r\n\r\nexport default NoteSelect;","const COMBINEDPIANO = [\n    {\n        label: 'C',\n        value: 0\n    },\n    {\n        label: 'C#/Db',\n        value: 1\n    },\n    {\n        label: 'D',\n        value: 2\n    },\n    {\n        label: 'D#/Eb',\n        value: 3\n    },\n    {\n        label: 'E',\n        value: 4\n    },\n    {\n        label: 'F',\n        value: 5\n    },\n    {\n        label: 'F#/Gb',\n        value: 6\n    },\n    {\n        label: 'G',\n        value: 7\n    },\n    {\n        label: 'G#/Ab',\n        value: 8\n    },\n    {\n        label: 'A',\n        value: 9\n    },\n    {\n        label: 'A#/Bb',\n        value: 10\n    },\n    {\n        label: 'B',\n        value: 11\n    },\n    {\n        label: 'C',\n        value: 12\n    },\n    {\n        label: 'C#/Db',\n        value: 13\n    },\n    {\n        label: 'D',\n        value: 14\n    },\n    {\n        label: 'D#/Eb',\n        value: 15\n    },\n    {\n        label: 'E',\n        value: 16\n    },\n    {\n        label: 'F',\n        value: 17\n    },\n    {\n        label: 'F#/Gb',\n        value: 18\n    },\n    {\n        label: 'G',\n        value: 19\n    },\n    {\n        label: 'G#/Ab',\n        value: 20\n    },\n    {\n        label: 'A',\n        value: 21\n    },\n    {\n        label: 'A#/Bb',\n        value: 22\n    },\n    {\n        label: 'B',\n        value: 23\n    },\n    {\n        label: 'C',\n        value: 24\n    }\n]\n\nexport default COMBINEDPIANO;","import COMBINEDPIANO from '../bpmtools.files/combinedpiano';\r\n\r\nexport const getScale = (currentroot, selectedscale) => {\r\n    let newscale = [];\r\n    let newsteps = [];\r\n    //shift for transpose\r\n    selectedscale.map((shift) => (\r\n        newsteps.push(shift-1)\r\n    ))\r\n    newsteps.map((step) =>(\r\n        newscale.push(parseInt(step)+parseInt(currentroot))\r\n    ))\r\n    let newnotes = [];\r\n    newscale.forEach((step) =>(\r\n        newnotes.push(COMBINEDPIANO.filter(obj => {return obj.value === step}))\r\n    ))\r\n    let newNames = [];\r\n    newnotes.forEach((obj) =>(\r\n        newNames.push(obj[0].label)\r\n    ))\r\n    return newNames;\r\n}\r\n","import React, { useState } from 'react';\r\nimport ModeSelect from './bpmtools.subcomponents/mode-select';\r\nimport NoteSelect from './bpmtools.subcomponents/note-select';\r\nimport { getScale } from '../bpmtools.functions/fGetScale';\r\nimport MODES from '../bpmtools.files/modes';\r\nimport {\r\n    HStack,\r\n    Text,\r\n    Link,\r\n    Center\r\n} from \"@chakra-ui/react\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nconst initialState = {\r\n    mode: \"aeolian\",\r\n    root: 0,\r\n    scale: ['C', 'D', 'D#/Eb', 'F', 'G', 'G#/Ab', 'A#/Bb'],\r\n    chords: ['i', 'dim', 'III', 'iv', 'v', 'VI', 'VII'],\r\n    steps: [1, 3, 4, 6, 8, 9, 11]\r\n}\r\n\r\nconst Scale = () => {\r\n    const [userState, setUserState] = useState(initialState);\r\n\r\n    const selectModeHandler = (newMode) => {\r\n        let selectedMode = MODES.filter(obj => {\r\n            return obj.name === newMode.value\r\n        });\r\n        setUserState(prevUserState => {\r\n            return {\r\n                mode: newMode.value,\r\n                chords: selectedMode[0].notation,\r\n                steps: selectedMode[0].steps,\r\n                root: userState.root,\r\n                scale: getScale(userState.root, selectedMode[0].steps)\r\n            };\r\n        });\r\n    }\r\n\r\n    const selectNoteHandler = (newNote) => {\r\n        let currentNote = newNote.value;\r\n        setUserState(prevUserState => {\r\n            return {\r\n                root: currentNote,\r\n                chords: userState.chords,\r\n                mode: userState.mode,\r\n                steps: userState.steps,\r\n                scale: getScale(currentNote, userState.steps)\r\n            };\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"scaleTable\">\r\n                <HStack>\r\n                    <ModeSelect onModeChange={selectModeHandler} />\r\n                    <NoteSelect onNoteChange={selectNoteHandler} />\r\n                </HStack>\r\n                <Table size=\"small\">\r\n                    <caption>Choose a mode and/or a starting key to get notes and chords within that scale. Additional information can be found in the links below.</caption>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell style={{padding: 6}} align=\"center\">\r\n                                Note\r\n                        </TableCell>\r\n                            {userState.scale.map((note) => (\r\n                                <TableCell style={{padding: 8}} align=\"center\">{note}</TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell style={{padding: 6}} align=\"center\">\r\n                                Chord\r\n                        </TableCell>\r\n                            {userState.chords.map((chord) => (\r\n                                <TableCell style={{padding: 8}} align=\"center\">{chord}</TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n                <Center>\r\n                    <HStack>\r\n                        <Link href=\"https://en.wikipedia.org/wiki/Mode_(music)\" isExternal>Modes</Link>\r\n                        <Text> | </Text>\r\n                        <Link href=\"https://en.wikipedia.org/wiki/Chord_(music)#Scale_degree\" isExternal>Chords</Link>\r\n                        <Text> | </Text>\r\n                        <Link href=\"https://en.wikipedia.org/wiki/Circle_of_fifths\" isExternal>Circle of fifths</Link>\r\n                    </HStack>\r\n                </Center>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Scale;","const DELAYNOTATION = ['2/1', '1/1', '1/2', '1/4', '1/8', '1/16', '1/32', '1/64'];\nexport default DELAYNOTATION;","export const getDuplets = (bpm) => {\r\n    let duplettable = [];\r\n    let bpmMs = (60000/bpm);\r\n    duplettable.push((bpmMs*8).toFixed(1)+' ms'); // - 2/1\r\n    duplettable.push((bpmMs*4).toFixed(1)+' ms'); // - 1/1\r\n    duplettable.push((bpmMs*2).toFixed(1)+' ms'); // - 1/2\r\n    duplettable.push((bpmMs).toFixed(1)+' ms'); // - 1/4\r\n    duplettable.push((bpmMs/2).toFixed(1)+' ms'); // - 1/8\r\n    duplettable.push((bpmMs/4).toFixed(1)+' ms'); // - 1/16\r\n    duplettable.push((bpmMs/8).toFixed(1)+' ms'); // - 1/32\r\n    duplettable.push((bpmMs/16).toFixed(1)+' ms'); // - 1/64\r\n    return duplettable;\r\n}","export const getTriplets = (bpm) => {\r\n        \r\n    let triplettable = [];\r\n    let bpmMs = (60000/bpm)*4/3;\r\n    triplettable.push((bpmMs*2).toFixed(1)+' ms') // - 2/1\r\n    triplettable.push(bpmMs.toFixed(1)+' ms') // - 1/1\r\n    triplettable.push((bpmMs/2).toFixed(1)+' ms') // - 1/2\r\n    triplettable.push((bpmMs/4).toFixed(1)+' ms') // - 1/4\r\n    triplettable.push((bpmMs/8).toFixed(1)+' ms') // - 1/8\r\n    triplettable.push((bpmMs/16).toFixed(1)+' ms') // - 1/16\r\n    triplettable.push((bpmMs/32).toFixed(1)+' ms') // - 1/32\r\n    triplettable.push((bpmMs/64).toFixed(1)+' ms') // - 1/64\r\n    return triplettable;\r\n}","export const getDotted = (bpm) => {\r\n        \r\n    let dottedtable = [];\r\n    let bpmMs = (60000/bpm)*1.5;\r\n    dottedtable.push(((bpmMs*8).toFixed(1))+' ms') // - 2/1\r\n    dottedtable.push(((bpmMs*4).toFixed(1))+' ms') // - 1/1\r\n    dottedtable.push(((bpmMs*2).toFixed(1))+' ms') // - 1/2\r\n    dottedtable.push((bpmMs.toFixed(1))+' ms') // - 1/4\r\n    dottedtable.push(((bpmMs/2).toFixed(1))+' ms') // - 1/8\r\n    dottedtable.push(((bpmMs/4).toFixed(1))+' ms') // - 1/16\r\n    dottedtable.push(((bpmMs/8).toFixed(1))+' ms') // - 1/32\r\n    dottedtable.push(((bpmMs/16).toFixed(1))+' ms') // - 1/64\r\n    return dottedtable;\r\n}","import React from 'react';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nconst CleanTimeTable = (props) => {\r\n    return(\r\n        <TableBody>\r\n        <TableRow>\r\n            <TableCell>\r\n                {props.a[0]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.b[0]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.c[0]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.d[0]}\r\n            </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n            <TableCell>\r\n                {props.a[1]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.b[1]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.c[1]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.d[1]}\r\n            </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n            <TableCell>\r\n                {props.a[2]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.b[2]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.c[2]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.d[2]}\r\n            </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n            <TableCell>\r\n                {props.a[3]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.b[3]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.c[3]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.d[3]}\r\n            </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n            <TableCell>\r\n                {props.a[4]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.b[4]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.c[4]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.d[4]}\r\n            </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n            <TableCell>\r\n                {props.a[5]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.b[5]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.c[5]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.d[5]}\r\n            </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n            <TableCell>\r\n                {props.a[6]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.b[6]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.c[6]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.d[6]}\r\n            </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n            <TableCell>\r\n                {props.a[7]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.b[7]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.c[7]}\r\n            </TableCell>\r\n            <TableCell>\r\n                {props.d[7]}\r\n            </TableCell>\r\n        </TableRow>\r\n        </TableBody>\r\n        \r\n\r\n    )\r\n}\r\nexport default CleanTimeTable;","import React from 'react';\r\nimport DELAYNOTATION from '../bpmtools.files/delaynotation';\r\nimport { getDuplets } from '../bpmtools.functions/fGetDuplets';\r\nimport { getTriplets } from '../bpmtools.functions/fGetTriplets';\r\nimport { getDotted } from '../bpmtools.functions/fGetDotted';\r\nimport CleanTimeTable from './bpmtools.subcomponents/Cleantimetable';\r\nimport {\r\n    HStack,\r\n    Text,\r\n    Link,\r\n    Center\r\n} from \"@chakra-ui/react\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\n\r\nconst Time = props => {\r\n\r\n    return (\r\n        <div>\r\n                <Table size=\"small\">\r\n                    <caption>These timings can be useful for experimenting with delays and reverbs or manually syncing them to your tempo. 16th, 32nd, and 64th values might be useful for compression attack times for preserving or accentuating transients. </caption>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                Notation\r\n                        </TableCell>\r\n                            <TableCell>\r\n                                Duplets\r\n                        </TableCell>\r\n                            <TableCell>\r\n                                Triplets\r\n                        </TableCell>\r\n                            <TableCell>\r\n                                Dotted\r\n                        </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <CleanTimeTable a={DELAYNOTATION} b={getDuplets(props.BPM)} c={getTriplets(props.BPM)} d={getDotted(props.BPM)} />\r\n                </Table>\r\n                <Center>\r\n                    <HStack>\r\n                        <Link href=\"https://support.presonus.com/hc/en-us/articles/210045813-Reverb-Pre-Delay\" isExternal>Pre-delay</Link>\r\n                        <Text> | </Text>\r\n                        <Link href=\"https://en.wikipedia.org/wiki/Beat_(music)\" isExternal>Beats</Link>\r\n                    </HStack>\r\n                </Center>\r\n                </div>\r\n    )\r\n}\r\nexport default Time;","import React from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport '@fontsource/roboto';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    },\r\n    menuButton: {\r\n\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    color: {\r\n\r\n    }\r\n}));\r\n\r\nexport default function ButtonAppBar(props) {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const changeBpm = event => {\r\n        event.preventDefault();\r\n\r\n        const newBpm = {\r\n            text: 'BPM has changed!',\r\n            value: event.target.value\r\n        };\r\n        props.onBpmInput(newBpm.value);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"fixed\" classes={{\r\n                root: classes.root\r\n            }}>\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem >BPM Tools</MenuItem>\r\n                        <MenuItem >BPM Info</MenuItem>\r\n                        <MenuItem >About</MenuItem>\r\n                    </Menu>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Music Production Tools\r\n                    </Typography>\r\n                    <TextField\r\n                    onChange={changeBpm}\r\n                        id=\"outlined-start-adornment\"\r\n                        InputProps={{\r\n                            endAdornment: <InputAdornment position=\"start\">BPM</InputAdornment>,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        margin=\"dense\"\r\n                        defaultValue=\"128\"\r\n                        style={{width: 110}}\r\n                    />\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","export const getLFO = (userBpm,index) => {\r\n    let baseLFO = userBpm/60;\r\n    let lfoTable = [];\r\n    lfoTable.push((baseLFO*8).toFixed(3)+' Hz')\r\n    lfoTable.push((baseLFO*4).toFixed(3)+' Hz')\r\n    lfoTable.push((baseLFO*2).toFixed(3)+' Hz')\r\n    lfoTable.push((baseLFO).toFixed(3)+' Hz')\r\n    lfoTable.push((baseLFO/2).toFixed(3)+' Hz')\r\n    lfoTable.push((baseLFO/4).toFixed(3)+' Hz')\r\n    lfoTable.push((baseLFO/8).toFixed(3)+' Hz')\r\n    lfoTable.push((baseLFO/16).toFixed(3)+' Hz')\r\n    return lfoTable[index];\r\n}","import React from 'react';\r\nimport {\r\n    HStack,\r\n    Text,\r\n    Link,\r\n    Center\r\n} from \"@chakra-ui/react\";\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport DELAYNOTATION from '../bpmtools.files/delaynotation';\r\nimport { getLFO } from '../bpmtools.functions/fGetLFO';\r\n\r\nconst LFO = props => {\r\n    const printLFO = () => {\r\n        let lfotable = [];\r\n        DELAYNOTATION.forEach((value, index) => {\r\n            lfotable.push(\r\n            <TableRow>\r\n                <TableCell>\r\n                    {value}\r\n                </TableCell>\r\n                <TableCell>\r\n                    {getLFO(props.BPM, index)}\r\n                </TableCell>\r\n            </TableRow>\r\n            )\r\n        })\r\n        return lfotable;\r\n    }\r\n    return (\r\n        <div>\r\n            <Table size=\"sm\">\r\n                <caption>These timings can be useful for experimenting with synthesizers and analog modelled gear.</caption>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            Notation\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            Rate\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {printLFO()}\r\n                </TableBody>\r\n            </Table>\r\n            <Center>\r\n                <HStack>\r\n                    <Link href=\"https://en.wikipedia.org/wiki/Low-frequency_oscillation\" isExternal>LFO</Link>\r\n                    <Text> | </Text>\r\n                    <Link href=\"https://en.wikipedia.org/wiki/Hertz\" isExternal>Hertz</Link>\r\n                </HStack>\r\n            </Center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LFO;","const FREQUENCY = [\n    {\n        name: 'C',\n        value: [16.35, 32.70, 65.41, 130.81, 261.63, 523.25, 1046.50, 2093.00, 4186.01]\n    },\n    {\n        name: 'C# / Db',\n        value: [17.32, 34.65, 69.30, 138.59, 277.18, 554.37, 1108.73, 2217.46, 4434.92]\n    },\n    {\n        name: 'D',\n        value: [18.35, 36.71, 73.42, 146.83, 293.66, 587.33, 1174.66, 2349.32, 4698.63]\n    },\n    {\n        name: 'D# / Eb',\n        value: [19.45, 38.89, 77.78, 155.56, 311.13, 622.25, 1244.51, 2489.02, 4978.03]\n    },\n    {\n        name: 'E',\n        value: [20.60, 41.20, 82.41, 164.81, 329.63, 659.25, 1318.51, 2637.02, 5274.04]\n    },\n    {\n        name: 'F',\n        value: [21.83, 43.65, 87.31, 174.61, 349.23, 698.46, 1396.91, 2793.83, 5587.65]\n    },\n    {\n        name: 'F# / Gb',\n        value: [23.12, 46.25, 92.50, 185.00, 369.99, 739.99, 1479.98, 2959.96, 5919.91]\n    },\n    {\n        name: 'G',\n        value: [24.50, 49.00, 98.00, 196.00, 392.00, 783.99, 1567.98, 3135.96, 6271.93]\n    },\n    {\n        name: 'G# / Ab',\n        value: [25.96, 51.91, 103.83, 207.65, 415.30, 830.61, 1661.22, 3322.44, 6644.88]\n    },\n    {\n        name: 'A',\n        value: [27.50, 55.00, 110.00, 220.00, 440.00, 880.00, 1760.00, 3520.00, 7040.00]\n    },\n    {\n        name: 'A# / Bb',\n        value: [29.14, 58.27, 116.54, 233.08, 466.16, 923.33, 1864.66, 3729.31, 7458.62]\n    },\n    {\n        name: 'B',\n        value: [30.87, 61.74, 123.47, 246.94, 493.88, 987.77, 1975.53, 3951.07, 7902.13]\n    },\n\n\n]\n\nexport default FREQUENCY;","import React from \"react\";\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport FREQUENCY from \"../../bpmtools.files/frequency\";\r\nimport { cycleTime } from '../../bpmtools.functions/fCycleTime';\r\n\r\nconst Subtable = () => {\r\n    return (\r\n        <TableBody>\r\n            {FREQUENCY.map((freq) => (\r\n                <TableRow>\r\n                    <TableCell>\r\n                        {freq.name+'1'}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                        {freq.value[1].toFixed(1)+' Hz'}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                        {cycleTime(freq.value[1])+' ms'}\r\n                    </TableCell>\r\n                </TableRow>\r\n    ))}\r\n        </TableBody>\r\n    )\r\n}\r\n\r\nexport default Subtable;","export const cycleTime = (hertz) => {\r\n    let singleCycle = (1000/hertz);\r\n    return singleCycle.toFixed(0);\r\n}","import React from 'react';\r\nimport {\r\n    HStack,\r\n    Text,\r\n    Link,\r\n    Center\r\n} from \"@chakra-ui/react\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Subtable from './bpmtools.subcomponents/Subtable';\r\n\r\nconst Sub = () => {\r\n    return (\r\n        <div>\r\n            <Table size=\"small\">\r\n                <caption>This table provides the time it takes to complete a single sub bass cycle. It may be beneficial for applying compression or layering in the sub-bass range.</caption>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            Note\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            Frequency\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            Time (ms)\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <Subtable/>\r\n            </Table>\r\n            <Center>\r\n                <HStack>\r\n                    <Link href=\"https://en.wikipedia.org/wiki/Sub-bass\" isExternal>Sub-bass</Link>\r\n                    <Text> | </Text>\r\n                    <Link href=\"https://www.izotope.com/en/learn/7-tips-for-mixing-bass.html\" isExternal>Mixing Bass (iZotope)</Link>\r\n                </HStack>\r\n            </Center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sub;","import React from 'react';\r\nimport {\r\n    HStack,\r\n    Link,\r\n    Center\r\n} from \"@chakra-ui/react\";\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport FREQUENCY from '../bpmtools.files/frequency';\r\n\r\nconst getRange = (oct) => {\r\n    if (oct < 1){\r\n        return 'sub bass'\r\n    } else if (oct < 2){\r\n        return 'low bass'\r\n    } else if (oct < 3){\r\n    return 'mid bass'      \r\n    } else if (oct < 4){\r\n        return 'upper bass'\r\n    } else if (oct < 5){\r\n        return 'lower midrange' \r\n    } else if (oct < 6){\r\n        return 'middle midrange'\r\n    } else if (oct < 7){\r\n        return 'upper midrange'\r\n    } else if (oct < 8){\r\n        return 'present midrange'\r\n    } else {\r\n        return 'high end'\r\n    }\r\n}\r\n\r\nconst allFrequencies = () => {\r\n    const EQTABLE = [];\r\n    for (let octave = 0; octave < 9; octave++) {\r\n        FREQUENCY.map((freq) => (\r\n            EQTABLE.push(\r\n            <TableRow>\r\n                <TableCell>\r\n                    {freq.name + octave}\r\n                </TableCell>\r\n                <TableCell>\r\n                    {freq.value[octave].toFixed(1) + ' Hz'}\r\n                </TableCell>\r\n                <TableCell>\r\n                    {getRange(octave)}\r\n                </TableCell>\r\n            </TableRow>\r\n        )))\r\n    }\r\n    return EQTABLE;\r\n}\r\n\r\nconst Frequencies = () => {\r\n    return (\r\n        <div>\r\n            <Table size=\"small\">\r\n                <caption>A table of musical notes and their corresponding frequencies (when A=440). This is useful for instrumentation ranges and EQing.</caption>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            Note (A4 = 440)\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            Frequency (Hz)\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            Range\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {allFrequencies()}\r\n                </TableBody>\r\n            </Table>\r\n            <Center>\r\n                <HStack>\r\n                    <Link href=\"https://pages.mtu.edu/~suits/notefreqs.html\" isExternal>Frequencies of Musical Notes</Link>\r\n                </HStack>\r\n            </Center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Frequencies;","import React from 'react';\r\n\r\nconst DevNotes = () => {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                <li>\r\n                    -alternate row changes for better table viewing\r\n                </li>\r\n                <li>\r\n                    -highlight range notes used in 'Scale' module\r\n                </li>\r\n                <li>\r\n                    - -collapsable ranges\r\n                </li>\r\n                <li>\r\n                    -toggle dark/light theme\r\n                </li>\r\n                <li>\r\n                    -genre presets\r\n                </li>\r\n                <li>\r\n                    -developer notes page about the technical aspects of this app\r\n                </li>\r\n                <li>\r\n                    - -add those pesky key values for the arrays / expunge page errors\r\n                </li>\r\n                <li>\r\n                    -deep explanation of tools page\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DevNotes;","import React, { useState } from 'react';\r\nimport Module from './bpmtools.components/Module';\r\nimport Scale from './bpmtools.components/Scale';\r\nimport Time from './bpmtools.components/Time';\r\nimport Nav from './bpmtools.components/Nav';\r\nimport Lfo from './bpmtools.components/Lfo';\r\nimport Sub from './bpmtools.components/Sub';\r\nimport Frequencies from './bpmtools.components/Frequencies';\r\nimport DevNotes from './bpmtools.components/DevNotes';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst BpmTools = () => {\r\n    const [userBpm, setUserBpm] = useState({Bpm: 128});\r\n\r\n    const [userState, setUserState] = useState({allModules: [true, true, true, true, true, true]});\r\n\r\n    const onBpmChange = (newBpm) => {\r\n        setUserBpm(() => {\r\n            return {\r\n                Bpm: newBpm\r\n            }\r\n        })\r\n        console.log('I guess you dont want to rock a party https://youtu.be/KsDFah7y03s?t=86 /s')\r\n    }\r\n\r\n    const changeToggle = (newToggle) => {\r\n        let currentState = [];\r\n        userState.allModules.forEach(element => currentState.push(element));\r\n        currentState[newToggle.index] = newToggle.comp;\r\n        setUserState(() => {\r\n            return {\r\n                allModules: currentState\r\n            }\r\n        })\r\n    }\r\n\r\n    const checkToggle = (toggleStatus, labelstring, module, id) => {\r\n        return (toggleStatus ? \r\n            <Module \r\n            label={labelstring}\r\n            component={module}\r\n            onToggleChange={changeToggle}\r\n            stateID={id}\r\n            />\r\n             : \r\n                <Module \r\n                label={labelstring}\r\n                component={<div/>}\r\n                onToggleChange={changeToggle}\r\n                stateID={id}\r\n                />\r\n            )\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"bpmBody\">\r\n            <Container maxWidth=\"sm\">\r\n                <Grid container direction={'column'} spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <Nav currentBPM={128} onBpmInput={onBpmChange}/>\r\n                    </Grid>\r\n                    <Grid item xs={12}\r\n                        >\r\n                            <div className=\"comp1\"\r\n                            />\r\n                            </Grid>\r\n                            <Grid item xs={12}\r\n                        >\r\n                        {checkToggle(userState.allModules[0],\r\n                        'Scale / mode reference',\r\n                        <Scale />,\r\n                        0\r\n                        )}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    {checkToggle(userState.allModules[1],\r\n                        'Sub-bass compression attack minimums',\r\n                        <Sub />,\r\n                        1\r\n                        )}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        {checkToggle(userState.allModules[2],\r\n                        'Delay / pre-delay calculator',\r\n                        <Time BPM={userBpm.Bpm}/>,\r\n                        2\r\n                        )}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    {checkToggle(userState.allModules[3],\r\n                        'LFO / Hertz calculator',\r\n                        <Lfo BPM={userBpm.Bpm}/>,\r\n                        3\r\n                        )}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    {checkToggle(userState.allModules[4],\r\n                        'Musical note frequencies',\r\n                        <Frequencies />,\r\n                        4\r\n                        )}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    {checkToggle(userState.allModules[5],\r\n                        'Developer notes',\r\n                        <DevNotes />,\r\n                        5\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\nexport default BpmTools;","import logo from './logo.svg';\nimport BpmTools from './bpmtools.app/BpmTools';\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nfunction App() {\n  return (\n<ChakraProvider>\n  <BpmTools />\n</ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bpmtools.app/Style.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}